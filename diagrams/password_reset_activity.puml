@startuml PasswordResetActivity

skinparam backgroundColor white
skinparam activityBorderColor #333333
skinparam activityBackgroundColor #F0F8FF
skinparam activityDiamondBorderColor #333333
skinparam activityDiamondBackgroundColor #FEFECE
skinparam arrowColor #666666
skinparam swimlaneBorderColor #999999
skinparam swimlaneTitleFontStyle bold

title Password Reset Process - Activity Diagram

|User|
start
:Access Login Page;
:Click "Forgot Password" Link;

|#AntiqueWhite|Frontend|
:Display Password Reset Form;

|User|
:Enter Email Address;

|Frontend|
:Validate Email Format;

if (Email Format Valid?) then (yes)
  :Send Password Reset Request;
else (no)
  :Display Email Format Error;
  stop
endif

|#LightBlue|Backend|
:Receive Password Reset Request;
:Look Up User by Email;

if (User Found?) then (yes)
  :Generate Unique Reset Token;
  :Set Token Expiry Time (24 hours);
  :Save Token to Database;
  
  |#LightGreen|Email Service|
  :Compose Password Reset Email;
  :Include Reset Link with Token;
  :Send Email;
  
  |Backend|
  :Return Success Response;
  
  |Frontend|
  :Display "Check Your Email" Message;
  
  |User|
  :Receive Password Reset Email;
  :Click Reset Password Link;
  
  |Frontend|
  :Extract Token from URL;
  :Send Token Validation Request;
  
  |Backend|
  :Validate Reset Token;
  
  if (Token Exists?) then (yes)
    if (Token Expired?) then (yes)
      :Return Token Expired Error;
      |Frontend|
      :Display "Link Expired" Message;
      :Offer to Request New Reset Link;
      stop
    else (no)
      if (Token Already Used?) then (yes)
        :Return Token Used Error;
        |Frontend|
        :Display "Link Already Used" Message;
        :Offer to Request New Reset Link;
        stop
      else (no)
        :Return Token Valid Response;
        |Frontend|
        :Display New Password Form;
        
        |User|
        :Enter New Password;
        :Confirm New Password;
        
        |Frontend|
        :Validate Password Strength;
        if (Password Strong Enough?) then (yes)
          :Validate Passwords Match;
          if (Passwords Match?) then (yes)
            :Send Password Update Request;
          else (no)
            :Display "Passwords Don't Match" Error;
            stop
          endif
        else (no)
          :Display Password Requirements;
          stop
        endif
        
        |Backend|
        :Validate Token Again;
        :Hash New Password;
        :Update User's Password;
        :Mark Token as Used;
        
        |#LightGreen|Email Service|
        :Send Password Changed Notification;
        
        |Backend|
        :Return Password Updated Response;
        
        |Frontend|
        :Display Success Message;
        :Redirect to Login Page;
        
        |User|
        :Login with New Password;
        stop
      endif
    endif
  else (no)
    :Return Invalid Token Error;
    |Frontend|
    :Display "Invalid Reset Link" Error;
    stop
  endif
else (no)
  :Return Generic Success Response;
  |Frontend|
  :Display "Check Your Email" Message;
  note right: Security measure: don't reveal if email exists
  stop
endif

@enduml 